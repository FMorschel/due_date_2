name: Update Version

on:
  pull_request:
    types:
      - closed

jobs:
  update_docs_new_version:
    if: (github.event.pull_request.merged == true) && (github.event.pull_request.base.ref == 'release') && (github.event.pull_request.title != 'Update docs')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Dart
      uses: dart-lang/setup-dart@v1

    - name: Generate tag message
      id: generate_tag_message
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION_NUMBER=$(grep 'version:' pubspec.yaml | sed 's/version: //g')
        LAST_VERSION=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1` 2>/dev/null || echo "0.0.0")
        COMMITS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/compare/$LAST_VERSION...$VERSION_NUMBER)

        WHATS_CHANGED=""
        NEW_CONTRIBUTORS=""
        CONTRIBUTORS=()

        REPO_URL="https://github.com/${{ github.repository }}"

        for row in $(echo "${COMMITS}" | jq -r '.commits[] | @base64'); do
          _jq() {
            echo ${row} | base64 --decode | jq -r ${1}
          }

          COMMIT_SHA=$(_jq '.sha')
          COMMIT_MESSAGE=$(_jq '.commit.message')
          AUTHOR_USERNAME=$(_jq '.author.login')
          PR_NUMBER=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT_SHA/pulls | jq -r '.[0].number')

          WHATS_CHANGED+="[$COMMIT_MESSAGE](https://github.com/${{ github.repository }}/pull/$PR_NUMBER) by [@$AUTHOR_USERNAME](https://github.com/$AUTHOR_USERNAME) in [#${PR_NUMBER}]($REPO_URL/pull/$PR_NUMBER)\n"

          if [[ ! " ${CONTRIBUTORS[@]} " =~ " ${AUTHOR_USERNAME} " ]]; then
            CONTRIBUTORS+=("$AUTHOR_USERNAME")
            NEW_CONTRIBUTORS+="[@$AUTHOR_USERNAME](https://github.com/$AUTHOR_USERNAME) made their first contribution in [#${PR_NUMBER}]($REPO_URL/pull/$PR_NUMBER)\n"
          fi
        done

        DESCRIPTION="What's Changed\n$WHATS_CHANGED\nNew Contributors\n$NEW_CONTRIBUTORS"
        if [[ $LAST_VERSION != "0.0.0" ]]; then
          DESCRIPTION+="\n[Full Changelog: $LAST_VERSION...$VERSION_NUMBER]($REPO_URL/compare/$LAST_VERSION...$VERSION_NUMBER)"
        fi

        echo "::set-output name=description::$DESCRIPTION"

    - name: Update docs
      id: update_docs
      run: |
        rm -rf doc/*
        dart doc

        # Get the name and email of the last committer
        last_committer_name=$(git log -1 --pretty=format:'%an')
        last_committer_email=$(git log -1 --pretty=format:'%ae')

        # Set the local Git config
        git config --local user.name "$last_committer_name"
        git config --local user.email "$last_committer_email"

        # Create a unique branch name using the current timestamp
        branch_name="temp-branch-$(date +%s)"
        echo "::set-output name=branch_name::$branch_name"

        git checkout -b $branch_name
        git add .
        git commit -m "Update docs" || echo "No changes to commit"
        echo "Version: $version"
        git push origin $branch_name

    - name: Create PR
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr create --title "Update docs" --body "${{ steps.generate_tag_message.outputs.description }}" --base release --head ${{ steps.update_docs.outputs.branch_name }}

  reopen_pr:
    needs: update_docs_new_version
    if: failure()
    runs-on: ubuntu-latest
    steps:
    - name: Reopen PR
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        curl \
          -X PATCH \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER \
          -d '{"state":"open"}'
